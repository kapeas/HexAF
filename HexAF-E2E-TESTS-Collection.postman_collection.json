{
	"info": {
		"_postman_id": "7547165c-ebaf-4d86-b143-3a4ae020c153",
		"name": "HexAF-E2E-TESTS-Collection",
		"description": "Api E2E tests.  \nAuthor: Francisco Luis Serrano Teruel (Kapeas)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40340556"
	},
	"item": [
		{
			"name": "Test 1: \"10:00 June14th 2020, product 35455 brand 1\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 200 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Price = 35.5\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.price).to.eq(35.5);\r",
							"});\r",
							"\r",
							"pm.test(\"Currency field is a String and matches 'EUR'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.currency).to.match(/^EUR$/);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-14T10:00:00Z&productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-14T10:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 2: \"16:00 June14th 2020 product 35455 brand 1\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 200 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Price = 25.45\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.price).to.eq(25.45);\r",
							"});\r",
							"\r",
							"pm.test(\"Currency field is a String and matches 'EUR'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.currency).to.match(/^EUR$/);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-14T16:00:00Z&productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-14T16:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 3: \"21:00  June14th 2020 product 35455 brand 1\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 200 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Price = 35.5\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.price).to.eq(35.5);\r",
							"});\r",
							"\r",
							"pm.test(\"Currency field is a String and matches 'EUR'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.currency).to.match(/^EUR$/);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-14T21:00:00Z&productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-14T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 4: \"10:00  June15th 2020 product 35455 brand 1\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 200 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Price = 30.5\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.price).to.eq(30.5);\r",
							"});\r",
							"\r",
							"pm.test(\"Currency field is a String and matches 'EUR'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.currency).to.match(/^EUR$/);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-15T10:00:00Z&productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-15T10:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 5: \"21:00 June16th 2020 product 35455 brand 1\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 200 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Price = 38.95\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.price).to.eq(38.95);\r",
							"});\r",
							"\r",
							"pm.test(\"Currency field is a String and matches 'EUR'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.currency).to.match(/^EUR$/);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-16T21:00:00Z&productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-16T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 6 \"Bad Request null dateTime\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 400 OK\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 400 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has status 400 and related error message\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.backend_message).to.eq(\"Param dateTime is mandatory and requires the following format: (YYYY-MM-DDTHH:mm:ssZ).\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 7 \"Bad Request null productId\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 400 OK\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 400 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has status 400 and related error message\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.backend_message).to.eq(\"Param productId is mandatory and requires the following format: (Integer number).\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-16T21:00:00Z&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-16T21:00:00Z"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 8 \"Bad Request null brand\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 400 OK\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 400 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has status 400 and related error message\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.backend_message).to.eq(\"Param brand is mandatory and requires the following format: (Integer number)\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-16T21:00:00Z&productId=35455",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-16T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 9 \"No record found for given params\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 404 OK\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 404 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 404 and related error message\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.backend_message).to.eq(\"No itemPriceAtGivenTime records were found with the given params.\");}\r",
							");\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2024-06-16T21:00:00Z&productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2024-06-16T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 10 \"Invalid data type for dateTime\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 400 OK\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 400 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=blahhhh&productId=35455&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "blahhhh"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 11 \"invalid data type for productId\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 400 OK\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 400 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-16T21:00:00Z&productId=Legggins&brand=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-16T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "Legggins"
						},
						{
							"key": "brand",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 12 \"Invalid data type for brand\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has Http Status 400 OK\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has status 400 and  Content-type application/json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/adapter-products?dateTime=2020-06-16T21:00:00Z&productId=35455&brand=cloudnatives",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"adapter-products"
					],
					"query": [
						{
							"key": "dateTime",
							"value": "2020-06-16T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brand",
							"value": "cloudnatives"
						}
					]
				}
			},
			"response": []
		}
	]
}