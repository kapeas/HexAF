//Creaci칩n de test en Postman. Requiere haber creado una petici칩n, y definir los tests en la pesta침a scripts de dicha petici칩n

// use the `pm.*` API to write your test
// the `pm.test()` method accepts 2 parameters
// the first parameter is the name of your test (be descriptive)
// the second parameter is a function whereby if any assertions within your function fail, then the test will fail

pm.test("Devuelve Http Status 200 OK", function () {
    // make an assertion
    // if your assertion throws an error, this test will fail
    pm.response.to.have.status(200);
});

pm.test("La respuesta tiene status 200 y content-type application/json", function () {
    // make as many assertions as you'd like as part of this test
    // if any assertion throws an error, this test will fail
    pm.response.to.have.status(200);
    pm.response.to.be.ok;
    pm.response.to.be.json;
});

pm.test("La respuesta Contiene el campo price", function () {
    // make as many assertions as you'd like as part of this test
    // if any assertion throws an error, this test will fail

});

pm.test("Precio = 35.5", function () {
    let jsonData = pm.response.json();
    pm.expect(jsonData.precio).to.eq(35.5)
    //.match(/^[a-z0-9]{7}$/);
});

pm.test("Divisa String y EUR", function () {
    let jsonData = pm.response.json();
    pm.expect(jsonData.divisa).to.match(/^EUR$/);
});


pm.test("Returns 15 char alhpanumeric id", function () {
    let jsonData = pm.response.json();
    pm.expect(jsonData.form.secondHash).to.match(/^[a-z0-9]{15}$/);
});
